{"version":3,"sources":["../../src/common/Game.js"],"names":["YourGameObject","gameEngine","options","props","other","Object","assign","health","type","BaseTypes","TYPES","INT16","DynamicObject","PADDING","WIDTH","HEIGHT","PADDLE_WIDTH","PADDLE_HEIGHT","Paddle","Ball","velocity","percent","Game","physicsEngine","SimplePhysicsEngine","on","gameLogic","bind","serverSideInit","serverSidePlayerJoined","serverSidePlayerDisconnected","clientSideInit","clientSideDraw","serializer","registerClass","paddles","world","queryObjects","instanceType","ball","queryObject","length","position","x","y","console","log","inputData","playerId","playerPaddle","input","addObjectToWorld","TwoVector","ev","id","controls","KeyboardControls","renderer","clientEngine","bindKey","repeat","updateEl","el","obj","style","top","left","background","toString","document","querySelector","GameEngine"],"mappings":"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","sourcesContent":["import {\n  GameEngine,\n  BaseTypes,\n  DynamicObject,\n  SimplePhysicsEngine,\n  TwoVector,\n  KeyboardControls,\n} from \"lance-gg\";\n\n// /////////////////////////////////////////////////////////\n//\n// GAME OBJECTS\n//\n// /////////////////////////////////////////////////////////\nclass YourGameObject extends DynamicObject {\n  constructor(gameEngine, options, props) {\n    super(gameEngine, options, props);\n  }\n\n  static get netScheme() {\n    return Object.assign(\n      {\n        health: { type: BaseTypes.TYPES.INT16 },\n      },\n      super.netScheme\n    );\n  }\n\n  syncTo(other) {\n    super.syncTo(other);\n  }\n}\n\nconst PADDING = 20;\nconst WIDTH = 400;\nconst HEIGHT = 400;\nconst PADDLE_WIDTH = 10;\nconst PADDLE_HEIGHT = 50;\nclass Paddle extends DynamicObject {\n  constructor(gameEngine, options, props) {\n    super(gameEngine, options, props);\n  }\n\n  static get netScheme() {\n    return Object.assign(\n      {\n        health: { type: BaseTypes.TYPES.INT16 },\n      },\n      super.netScheme\n    );\n  }\n\n  syncTo(other) {\n    super.syncTo(other);\n    this.health = other.health;\n  }\n}\n\nclass Ball extends DynamicObject {\n  constructor(gameEngine, options, props) {\n    super(gameEngine, options, props);\n  }\n\n  // avoid gradual synchronization of velocity\n  get bending() {\n    return { velocity: { percent: 0.0 } };\n  }\n\n  syncTo(other) {\n    super.syncTo(other);\n  }\n}\n\n// /////////////////////////////////////////////////////////\n//\n// GAME ENGINE\n//\n// /////////////////////////////////////////////////////////\nexport default class Game extends GameEngine {\n  constructor(options) {\n    super(options);\n    this.physicsEngine = new SimplePhysicsEngine({ gameEngine: this });\n\n    // common code\n    this.on(\"postStep\", this.gameLogic.bind(this));\n\n    // server-only code\n    this.on(\"server__init\", this.serverSideInit.bind(this));\n    this.on(\"server__playerJoined\", this.serverSidePlayerJoined.bind(this));\n    this.on(\n      \"server__playerDisconnected\",\n      this.serverSidePlayerDisconnected.bind(this)\n    );\n\n    // client-only code\n    this.on(\"client__rendererReady\", this.clientSideInit.bind(this));\n    this.on(\"client__draw\", this.clientSideDraw.bind(this));\n  }\n\n  registerClasses(serializer) {\n    serializer.registerClass(Paddle);\n    serializer.registerClass(Ball);\n  }\n\n  gameLogic() {\n    let paddles = this.world.queryObjects({ instanceType: Paddle });\n    let ball = this.world.queryObject({ instanceType: Ball });\n    if (!ball || paddles.length !== 2) return;\n\n    // CHECK LEFT EDGE:\n    if (\n      ball.position.x <= PADDING + PADDLE_WIDTH &&\n      ball.position.y >= paddles[0].y &&\n      ball.position.y <= paddles[0].position.y + PADDLE_HEIGHT &&\n      ball.velocity.x < 0\n    ) {\n      // ball moving left hit player 1 paddle\n      ball.velocity.x *= -1;\n      ball.position.x = PADDING + PADDLE_WIDTH + 1;\n    } else if (ball.position.x <= 0) {\n      // ball hit left wall\n      ball.velocity.x *= -1;\n      ball.position.x = 0;\n      console.log(`player 2 scored`);\n      paddles[0].health--;\n    }\n\n    // CHECK RIGHT EDGE:\n    if (\n      ball.position.x >= WIDTH - PADDING - PADDLE_WIDTH &&\n      ball.position.y >= paddles[1].position.y &&\n      ball.position.y <= paddles[1].position.y + PADDLE_HEIGHT &&\n      ball.velocity.x > 0\n    ) {\n      // ball moving right hits player 2 paddle\n      ball.velocity.x *= -1;\n      ball.position.x = WIDTH - PADDING - PADDLE_WIDTH - 1;\n    } else if (ball.position.x >= WIDTH) {\n      // ball hit right wall\n      ball.velocity.x *= -1;\n      ball.position.x = WIDTH - 1;\n      console.log(`player 1 scored`);\n      paddles[1].health--;\n    }\n\n    // ball hits top or bottom edge\n    if (ball.position.y <= 0) {\n      ball.position.y = 1;\n      ball.velocity.y *= -1;\n    } else if (ball.position.y >= HEIGHT) {\n      ball.position.y = HEIGHT - 1;\n      ball.velocity.y *= -1;\n    }\n  }\n\n  processInput(inputData, playerId) {\n    super.processInput(inputData, playerId);\n\n    // get the player paddle tied to the player socket\n    let playerPaddle = this.world.queryObject({ playerId });\n    if (playerPaddle) {\n      if (inputData.input === \"up\") {\n        playerPaddle.position.y -= 5;\n      } else if (inputData.input === \"down\") {\n        playerPaddle.position.y += 5;\n      }\n    }\n  }\n\n  // /////////////////////////////////////////////////////////\n  //\n  // SERVER ONLY CODE\n  //\n  // /////////////////////////////////////////////////////////\n  serverSideInit() {\n    // create the paddle objects\n    this.addObjectToWorld(\n      new Paddle(this, null, { position: new TwoVector(PADDING, 0) })\n    );\n    this.addObjectToWorld(\n      new Paddle(this, null, { position: new TwoVector(WIDTH - PADDING, 0) })\n    );\n    this.addObjectToWorld(\n      new Ball(this, null, {\n        position: new TwoVector(WIDTH / 2, HEIGHT / 2),\n        velocity: new TwoVector(2, 2),\n      })\n    );\n  }\n\n  // attach newly connected player to next available paddle\n  serverSidePlayerJoined(ev) {\n    let paddles = this.world.queryObjects({ instanceType: Paddle });\n    if (paddles[0].playerId === 0) {\n      paddles[0].playerId = ev.playerId;\n    } else if (paddles[1].playerId === 0) {\n      paddles[1].playerId = ev.playerId;\n    }\n  }\n\n  serverSidePlayerDisconnected(ev) {\n    let paddles = this.world.queryObjects({ instanceType: Paddle });\n    if (paddles[0].playerId === ev.id) {\n      paddles[0].playerId = 0;\n    } else if (paddles[1].playerId === ev.id) {\n      paddles[1].playerId = 0;\n    }\n  }\n\n  // /////////////////////////////////////////////////////////\n  //\n  // CLIENT ONLY CODE\n  //\n  // /////////////////////////////////////////////////////////\n  clientSideInit() {\n    this.controls = new KeyboardControls(this.renderer.clientEngine);\n    this.controls.bindKey('up', 'up', { repeat: true } );\n    this.controls.bindKey('down', 'down', { repeat: true } );\n}\n\nclientSideDraw() {\n\n    function updateEl(el, obj) {\n        let health = obj.health>0?obj.health:15;\n        el.style.top = obj.position.y + 10 + 'px';\n        el.style.left = obj.position.x + 'px';\n        el.style.background = `#ff${health.toString(16)}f${health.toString(16)}f`;\n    }\n\n    let paddles = this.world.queryObjects({ instanceType: Paddle });\n    let ball = this.world.queryObject({ instanceType: Ball });\n    if (!ball || paddles.length !== 2) return;\n    updateEl(document.querySelector('.ball'), ball);\n    updateEl(document.querySelector('.paddle1'), paddles[0]);\n    updateEl(document.querySelector('.paddle2'), paddles[1]);\n}\n}\n"],"file":"Game.js"}